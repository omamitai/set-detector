version: '3.8'

services:
  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    container_name: set-detector-backend
    restart: always
    volumes:
      - ./models:/app/models:ro
    environment:
      - FLASK_ENV=production
      - LOG_LEVEL=INFO
      - MAX_WORKERS=${MAX_WORKERS:-2}
      - PYTHONUNBUFFERED=1
      - ALLOWED_ORIGINS=${ALLOWED_ORIGINS:-http://localhost}
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    deploy:
      resources:
        limits:
          cpus: '1.5'
          memory: '3g'
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    networks:
      - app-network

  frontend:
    build: 
      context: ./frontend
      dockerfile: Dockerfile
      args:
        - REACT_APP_API_URL=${REACT_APP_API_URL:-}
        - REACT_APP_API_ENDPOINT=${REACT_APP_API_ENDPOINT:-/api}
    container_name: set-detector-frontend
    restart: always
    ports:
      - "${FRONTEND_PORT:-80}:80"
    environment:
      - NODE_ENV=production
    depends_on:
      - backend
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: '512m'
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    networks:
      - app-network
      
networks:
  app-network:
    driver: bridge
