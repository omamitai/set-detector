version: '3.8'

services:
  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    container_name: set-detector-backend
    restart: unless-stopped
    volumes:
      - ./models:/app/models:ro
      - ./backend/logs:/app/logs
    environment:
      - FLASK_ENV=production
      - LOG_LEVEL=INFO
      - MAX_WORKERS=${MAX_WORKERS:-2}
      - PYTHONUNBUFFERED=1
      - ALLOWED_ORIGINS=${ALLOWED_ORIGINS:-http://51.20.254.19,https://51.20.254.19}
      - MAX_SESSIONS=${MAX_SESSIONS:-20}
      - SESSION_TTL=${SESSION_TTL:-300}
      - CLEANUP_INTERVAL=${CLEANUP_INTERVAL:-60}
      - MAX_MEMORY_PERCENT=${MAX_MEMORY_PERCENT:-80}
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/api/health"]
      interval: 30s
      timeout: 15s
      retries: 3
      start_period: 60s
    deploy:
      resources:
        limits:
          cpus: '${CPU_LIMIT:-1.0}'
          memory: '${MEMORY_LIMIT:-2g}'
    logging:
      driver: "json-file"
      options:
        max-size: "20m"
        max-file: "5"
    networks:
      - app-network

  frontend:
    build: 
      context: ./frontend
      dockerfile: Dockerfile
      args:
        - REACT_APP_API_URL=${REACT_APP_API_URL:-http://51.20.254.19}
        - REACT_APP_API_ENDPOINT=${REACT_APP_API_ENDPOINT:-/api}
    container_name: set-detector-frontend
    restart: unless-stopped
    ports:
      - "${FRONTEND_PORT:-80}:80"
      - "443:443"
    volumes:
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - backend
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80/frontend-health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s
    deploy:
      resources:
        limits:
          cpus: '${FRONTEND_CPU_LIMIT:-0.5}'
          memory: '${FRONTEND_MEMORY_LIMIT:-512m}'
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    networks:
      - app-network
      
networks:
  app-network:
    driver: bridge
